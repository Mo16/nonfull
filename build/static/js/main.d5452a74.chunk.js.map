{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","supply","call","console","log","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","rpc","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledLink","App","useDispatch","useSelector","useState","isOpened","setIsOpened","claimingNft","setClaimingNft","feedback","setFeedback","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","className","marginTop","src","onClick","wasOpened","borderRadius","width","alt","textAlign","fontSize","fontWeight","color","Number","target","href","e","preventDefault","abiResponse","abi","localStorage","removeItem","web3Modal","Web3Modal","network","cacheProvider","connect","provider","Web3","Web3EthContract","setProvider","eth","getAccounts","accounts","request","method","networkId","SmartContractObj","on","window","location","reload","message","includes","String","disabled","gasLimit","totalCostWei","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5452a74.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.supply()\n        .call();\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\n\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst INFURA_ID = \"\";\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider, // required\n    options: {\n      infuraId: INFURA_ID, // required\n      rpc: {\n        56: \"https://bsc-dataseed.binance.org/\", \n      },\n    },\n  },\n\n};\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    try {\n      const abiResponse = await fetch(\"/config/abi.json\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const abi = await abiResponse.json();\n      const configResponse = await fetch(\"/config/config.json\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const CONFIG = await configResponse.json();\n      localStorage.removeItem(\"walletconnect\");\n      localStorage.removeItem(\"WALLETCONNECT_DEEPLINK_CHOICE\");\n      const web3Modal = new Web3Modal({\n        network: \"mainnet\", // optional\n        cacheProvider: false, // optional\n        providerOptions, // required\n      });\n      const provider = await web3Modal.connect();\n      const web3 = new Web3(provider);\n      console.log(\"web\", web3);\n\n      Web3EthContract.setProvider(provider);\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await provider.request({\n        method: \"net_version\",\n      });\n      console.log(\"networkId\", networkId);\n      if (networkId == CONFIG.NETWORK.ID) {\n        const SmartContractObj = new Web3EthContract(\n          abi,\n          CONFIG.CONTRACT_ADDRESS\n        );\n        dispatch(\n          connectSuccess({\n            account: accounts[0],\n            smartContract: SmartContractObj,\n            web3: web3,\n          })\n        );\n        // Add listeners start\n        provider.on(\"accountsChanged\", (accounts) => {\n          dispatch(updateAccount(accounts[0]));\n        });\n        provider.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n        // Add listeners end\n      } else {\n        dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n      }\n    } catch (err) {\n      console.log(\"error\", err, \" message\", err.message);\n      if (\n        typeof err !== \"undefined\" &&\n        typeof err.message !== \"undefined\" &&\n        err.message.includes(\"User Rejected\")\n      ) {\n        dispatch(connectFailed(\"User rejected the request\"));\n      } else if (\n        (typeof err === \"string\" || err instanceof String) &&\n        err.includes(\"Modal closed by user\")\n      ) {\n        dispatch(connectFailed(\"Modal closed by user\"));\n      } else {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  connect,\n  disconnectWallet,\n} from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\n\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len\n    ? `${input.substring(0, len)}...${input.substring(39)}`\n    : input;\n\nexport const StyledButton = styled.button`\n  padding: 8px 20px;\n  border-radius: 10px;\n  border: none;\n  background-color: var(--secondary);\n\n  font-weight: bold;\n  color: var(--secondary-text);\n\n  font-size: 30px;\n  cursor: pointer;\n\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n    width: 50%;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n\n  padding: 50px 0px;\n  width: 360px;\n  @media (min-width: 900px) {\n    width: 450px;\n  }\n  @media (min-width: 1000px) {\n    width: 900px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [isOpened, setIsOpened] = useState(false);\n\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(``);\n\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  function toggle() {\n    setIsOpened((wasOpened) => !wasOpened);\n  }\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost);\n    let totalGasLimit = String(gasLimit);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(1)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(`The ${CONFIG.NFT_NAME} Passport is now yours`);\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      {!isOpened && (\n        <s.Container\n          flex={1}\n          ai={\"center\"}\n          style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n          image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.jpg\" : null}\n        >\n          <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n            <s.Container flex={2} jc={\"center\"} ai={\"center\"} style={{}}>\n              <s.Container\n                flex={2}\n                jc={\"center\"}\n                ai={\"center\"}\n                style={{}}\n                className=\"firstBox\"\n              >\n                {/* <s.TextTitle\n                  style={{\n                    fontSize: 70,\n                    marginTop: -45,\n                    textAlign: \"center\",\n                  }}\n                >\n                  Nation of Nowhere\n                </s.TextTitle> */}\n                              <StyledImg\n                className=\" img-fluid fluid\"\n                style={{\n                  marginTop: \"-100px\",\n\n                }}\n                src=\"/config/images/NONLOGO.png\"\n              ></StyledImg>\n                <div className=\"box\">\n                  <StyledButton className=\"boxTitle\" onClick={toggle}>\n                    Connect\n                  </StyledButton>\n                </div>\n              </s.Container>\n            </s.Container>\n          </ResponsiveWrapper>\n        </s.Container>\n      )}\n\n      {isOpened && (\n        <s.Container\n          flex={1}\n          className=\"boxContent\"\n          ai={\"center\"}\n          style={{ padding: \"40px\", backgroundColor: \"black\" }}\n        >\n          <s.SpacerSmall />\n          <ResponsiveWrapper flex={1} style={{ padding: 24 }}>\n            <s.SpacerLarge />\n\n            <s.Container\n              flex={2}\n              jc={\"center\"}\n              ai={\"center\"}\n              style={{\n                borderRadius: 24,\n              }}\n            >\n              {/* <s.TextTitle\n                style={{\n                  fontSize: 40,\n                  marginTop: -45,\n                  textAlign: \"center\",\n                }}\n              >\n                Nation of Nowhere\n              </s.TextTitle> */}\n              <StyledImg\n                className=\" img-fluid fluid\"\n                style={{\n                  marginTop: \"-100px\",\n                  width: \"240px\"\n                }}\n                src=\"/config/images/NONLOGO.png\"\n              ></StyledImg>\n\n              <s.SpacerSmall />\n\n              <StyledLogo\n                style={{}}\n                alt={\"logo\"}\n                src={\"/config/images/logo.png\"}\n              />\n\n              <s.TextTitle\n                style={{\n                  textAlign: \"center\",\n                  fontSize: 20,\n                  fontWeight: \"bold\",\n                  color: \"var(--accent-text)\",\n                  marginTop: -10,\n                }}\n              >\n                {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n              </s.TextTitle>\n              <s.TextDescription\n                style={{\n                  textAlign: \"center\",\n                  color: \"var(--primary-text)\",\n                }}\n              ></s.TextDescription>\n              <s.SpacerSmall />\n              {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n                <>\n                  <s.TextTitle\n                    style={{\n                      textAlign: \"center\",\n                      color: \"var(--accent-text)\",\n                    }}\n                  >\n                    The sale has ended.\n                  </s.TextTitle>\n                  <s.TextDescription\n                    style={{\n                      textAlign: \"center\",\n                      color: \"var(--accent-text)\",\n                    }}\n                  >\n                    You can still find {CONFIG.NFT_NAME} on\n                  </s.TextDescription>\n                  <s.SpacerSmall />\n                  <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                    {CONFIG.MARKETPLACE}\n                  </StyledLink>\n                </>\n              ) : (\n                <>\n                  <s.SpacerXSmall />\n                  <s.TextDescription\n                    style={{\n                      textAlign: \"center\",\n                      color: \"var(--accent-text)\",\n                    }}\n                  >\n                    Mint price 0.099 ETH\n                  </s.TextDescription>\n                  <s.SpacerSmall />\n                  {blockchain.account === \"\" ||\n                  blockchain.smartContract === null ? (\n                    <s.Container ai={\"center\"} jc={\"center\"}>\n                      <s.SpacerSmall />\n                      <StyledButton\n                        onClick={(e) => {\n                          e.preventDefault();\n                          dispatch(connect());\n                          getData();\n                        }}\n                      >\n                        CONNECT WALLET\n                      </StyledButton>\n\n                      {blockchain.errorMsg !== \"\" ? (\n                        <>\n                          <s.SpacerSmall />\n                          <s.TextDescription\n                            style={{\n                              textAlign: \"center\",\n                              color: \"var(--accent-text)\",\n                            }}\n                          >\n                            {blockchain.errorMsg}\n                          </s.TextDescription>\n                        </>\n                      ) : null}\n                    </s.Container>\n                  ) : (\n                    <>\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {feedback}\n                      </s.TextDescription>\n\n                      <s.SpacerSmall />\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                        <StyledButton\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            claimNFTs();\n                            getData();\n                          }}\n                        >\n                          {claimingNft ? \"  BUSY\" : \"  MINT PASSPORT\"}\n                        </StyledButton>\n                      </s.Container>\n                    </>\n                  )}\n\n                  <br></br>\n                </>\n              )}\n              <s.SpacerMedium />\n            </s.Container>\n            <s.SpacerLarge />\n          </ResponsiveWrapper>\n          <s.SpacerMedium />\n          <s.Container\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{ width: \"70%\" }}\n          ></s.Container>\n        </s.Container>\n      )}\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}